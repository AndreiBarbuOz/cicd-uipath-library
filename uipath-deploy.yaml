AWSTemplateFormatVersion: "2010-09-09"
Description: "Codepipeline for testing and deploying UiPath workflows"
Parameters:
  RepositoryName:
    Type: String
    Description: Name of CodeCommit repository containing the source of the pipeline
  BranchName:
    Type: String
    Description: Name of the CodeCommit branch to use as the source of the pipeline
  CodeBuildImageStackName:
    Type: String
    Description: Name of CloudFormation stack specifying the Docker Repository which contains the build image
Resources:
  S3ArtifactStore:
    Type: AWS::S3::Bucket
  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "codepipeline.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /
      Policies:
      - PolicyName: "CodePipelineAccessPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
            - "s3:DeleteObject"
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucket"
            - "s3:PutObject"
            - "s3:GetBucketPolicy"
            Resource:
            - Fn::Sub: arn:aws:s3:::${S3ArtifactStore}
            - Fn::Sub: arn:aws:s3:::${S3ArtifactStore}/*
          - Effect: "Allow"
            Action:
            - "codecommit:ListBranches"
            - "codecommit:ListRepositories"
            - "codecommit:BatchGetRepositories"
            - "codecommit:Get*"
            - "codecommit:GitPull"
            - "codecommit:UploadArchive"
            Resource:
            - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}
          - Effect: "Allow"
            Action:
            - "codebuild:StartBuild"
            - "codebuild:BatchGetBuilds"
            Resource:
            - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${BuildDockerImageProject}
            - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/${BuildDockerImageProject}:*
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "codebuild.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Policies:
      - PolicyName: "CodeBuildAccessPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
            - "codecommit:ListBranches"
            - "codecommit:ListRepositories"
            - "codecommit:BatchGetRepositories"
            - "codecommit:Get*"
            - "codecommit:GitPull"
            Resource:
            - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}
          - Effect: "Allow"
            Action:
            - "iam:Get*"
            - "iam:List*"
            - "logs:Describe*"
            - "logs:Get*"
            - "tag:Get*"
            - "*"
            Resource:
            - "*"
          - Effect: "Allow"
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
          - Effect: "Allow"
            Action:
            - "s3:PutObject"
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucket"
            Resource:
            - Fn::Sub: arn:aws:s3:::${S3ArtifactStore}/*
            - Fn::Sub: arn:aws:s3:::${S3ArtifactStore}
  PackageBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Build the Docker image based on the Dockerfile present in the source
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: WINDOWS_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image:
          Fn::Join: [':', ["Fn::ImportValue": !Sub "${CodeBuildImageStackName}-EcrUri", "latest"]]
        ImagePullCredentialsType: CODEBUILD
      TimeoutInMinutes: 15
  CodePipelineDeploy:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          Ref: S3ArtifactStore
      RoleArn: !GetAtt CodePipelineRole.Arn
      Name: UiPathDeploy
      Stages:
      - Name: CodeCommitSource
        Actions:
        - Name: SourceAction
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: 1
            Provider: CodeCommit
          OutputArtifacts:
          - Name: SourceOutput
          Configuration:
            RepositoryName:
              Ref: RepositoryName
            BranchName:
              Ref: BranchName
          RunOrder: 1
      - Name: PackageBuildAndTest
        Actions:
        - Name: PackageBuild
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: 1
            Provider: CodeBuild
          InputArtifacts:
          - Name: SourceOutput
          Configuration:
            ProjectName:
              Ref: PackageBuildProject
          RunOrder: 1
          
